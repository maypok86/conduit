// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package middleware_test is a generated GoMock package.
package middleware_test

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	token "github.com/maypok86/conduit/pkg/token"
)

// MockTokenMaker is a mock of TokenMaker interface.
type MockTokenMaker struct {
	ctrl     *gomock.Controller
	recorder *MockTokenMakerMockRecorder
}

// MockTokenMakerMockRecorder is the mock recorder for MockTokenMaker.
type MockTokenMakerMockRecorder struct {
	mock *MockTokenMaker
}

// NewMockTokenMaker creates a new mock instance.
func NewMockTokenMaker(ctrl *gomock.Controller) *MockTokenMaker {
	mock := &MockTokenMaker{ctrl: ctrl}
	mock.recorder = &MockTokenMakerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenMaker) EXPECT() *MockTokenMakerMockRecorder {
	return m.recorder
}

// CreateToken mocks base method.
func (m *MockTokenMaker) CreateToken(email string, duration time.Duration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken", email, duration)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MockTokenMakerMockRecorder) CreateToken(email, duration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MockTokenMaker)(nil).CreateToken), email, duration)
}

// VerifyToken mocks base method.
func (m *MockTokenMaker) VerifyToken(accessToken string) (*token.Payload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyToken", accessToken)
	ret0, _ := ret[0].(*token.Payload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyToken indicates an expected call of VerifyToken.
func (mr *MockTokenMakerMockRecorder) VerifyToken(accessToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyToken", reflect.TypeOf((*MockTokenMaker)(nil).VerifyToken), accessToken)
}
